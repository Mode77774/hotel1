(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-3135b97b"],{"04fc":function(t,e,a){t.exports=a.p+"static/img/bankCard1.b4ec9245.svg"},"0ddc":function(t,e,a){"use strict";a("ebf6")},"11fc":function(t,e,a){t.exports=a.p+"static/img/bankCard2.c280fae5.svg"},"173f":function(t,e,a){t.exports=a.p+"static/img/bankCard3.eaf66953.svg"},"1a76":function(t,e,a){},"2ad9":function(t,e,a){t.exports=a.p+"static/img/bankCard8.97190c49.png"},"65be":function(t,e,a){var s={"./bankCard1.png":"65aa","./bankCard1.svg":"04fc","./bankCard2.png":"dfdf","./bankCard2.svg":"11fc","./bankCard3.png":"4da3","./bankCard3.svg":"173f","./bankCard4.png":"0359","./bankCard4.svg":"e51a","./bankCard5.png":"f096","./bankCard5.svg":"b2e5","./bankCard6.png":"69fb","./bankCard7.png":"7447","./bankCard8.png":"2ad9"};function i(t){var e=r(t);return a(e)}function r(t){if(!a.o(s,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return s[t]}i.keys=function(){return Object.keys(s)},i.resolve=r,t.exports=i,i.id="65be"},"69fb":function(t,e,a){t.exports=a.p+"static/img/bankCard6.46ff15de.png"},7447:function(t,e,a){t.exports=a.p+"static/img/bankCard7.e797c42d.png"},"9c70":function(t,e,a){"use strict";a("1a76")},ab6a:function(t,e,a){},b04b:function(t,e,a){t.exports=a.p+"static/img/left-icon.e417dcda.svg"},b2e5:function(t,e,a){t.exports=a.p+"static/img/bankCard5.0b27e192.svg"},c51a:function(t,e,a){"use strict";a.r(e);var s=function(){var t=this,e=t._self._c;return e("div",{attrs:{id:"paymentMethod"}},[e("div",{ref:"padding_bottom_box",staticClass:"paymentMethod-content"},[e("AllPaymentMethod",{ref:"allPaymentMethod",attrs:{"pay-method-status":t.payMethodStatus,paymethodList:t.paymethodList,savedCard:t.savedCard}}),e("CorrespondPaymentMethod",{ref:"correspondPaymentMethod",attrs:{"pay-method-status":t.payMethodStatus,allSavedCard:t.savedCard}})],1),e("footer",{ref:"footer_ref"},[t.buttonState?e("button",{staticClass:"continue",attrs:{disabled:t.disabled},on:{click:t.placeOrder}},[t._v(" "+t._s(t.$t("button_components.proceed"))+" "),t.request_loading?e("button-loading",{staticClass:"rightIcon"}):e("img",{staticClass:"rightIcon",attrs:{src:a("b120"),alt:""}})],1):t._e(),e("bottom-bar",{on:{setPaddingBottom:function(e){t.$refs.padding_bottom_box.style.paddingBottom=t.$refs.footer_ref.clientHeight+"px"}}})],1),e("div",{ref:"addNewCard",staticClass:"addNewCard",class:1==t.addNewCardShow?"addNewCardBottom":2==t.addNewCardShow?"addNewCardTop":"animation_opacity"},[e("div",{staticClass:"addNewCar"},[e("p",[t._v(t._s(t.$t("buyPayWay.useCardTitle")))]),e("img",{attrs:{src:a("9103"),alt:""},on:{click:t.goBack}})]),e("newCardInfo",{ref:"newCardInfo_ref"})],1)])},i=[],r=(a("14d9"),a("eec8")),o=function(){var t=this,e=t._self._c;return e("div",{staticClass:"allPaymentMethod",class:{allPaymentMethodView:!t.payMethodStatus},attrs:{id:"allPaymentMethod"}},[e("div",{staticClass:"content"},["{}"!==JSON.stringify(t.paymethod_savedCard)?e("div",{staticClass:"savedCard-box"},[e("div",{staticClass:"allPaymentMethod-title"},[t._v(" "+t._s(t.$t("buyPayWay.recentlyUsed"))+" ")]),e("div",{staticClass:"savedCard-view",class:{"select-true":"saveCard"===t.selectKey},on:{click:function(e){return t.selectMethods("saveCard",t.paymethod_savedCard)}}},[e("div",{staticClass:"icon"},[e("img",{attrs:{src:t._f("getCardInfobyCardNumber")(t.paymethod_savedCard.cardNumber,"cardLogo")}})]),e("div",{staticClass:"card-item-info"},[e("div",[e("div",{staticClass:"info"},[e("div",{staticClass:"card-type"},[e("span",[t._v(" "+t._s(t.cardType(t.paymethod_savedCard.cardNumber))+" "),e("span",{directives:[{name:"show",rawName:"v-show",value:"Master"===t.cardType(t.paymethod_savedCard.cardNumber),expression:"\n                      cardType(paymethod_savedCard.cardNumber) === 'Master'\n                    "}],staticStyle:{"text-transform":"lowercase"}},[t._v(" "+t._s(t.$t("buyPayWay.card"))+" ")])])]),e("div",{staticClass:"card-num"},[e("span",[t._v("****")]),t._v(t._s(t.paymethod_savedCard.cardNumber.substring(t.paymethod_savedCard.cardNumber.length-4))+" ")])])]),t.paymethod_savedCard.settleTime?e("p",{staticClass:"payArrivalTime"},[t._v(" "+t._s(t._f("onSettleTime")(t.paymethod_savedCard.settleTime))+" ")]):t._e()])])]):t._e(),t.paymethod_Original.length>0&&!t.$route.query.pathHistry&&"{}"!==JSON.stringify(t.paymethod_savedCard)?e("div",{staticClass:"allPaymentMethod-title"},[t.isShowPaymentMethodTitle?e("p",[t._v(" "+t._s(t.$t("buyPayWay.paymentMethod"))+" ")]):t._e()]):t._e(),t.isShowPaymentMethodTitle?e("div",{staticClass:"newPaymentMethod-list"},t._l(t.paymethod_Original,(function(a,s){var i,r;return e("div",{key:"binancePay_"+s,staticClass:"newPaymentMethod-item"},[e("div",{on:{click:function(e){return t.selectMethods(a.payWayCode,a)}}},[a.unavaible?e("div",{staticClass:"payment-other-ways",class:{"select-true":t.selectKey===a.payWayCode,icons:(null===(i=a.icons)||void 0===i?void 0:i.length)>0}},[e("div",{staticClass:"logo-icon"},[a.logoIcon?e("div",{staticClass:"icon"},[e("img",{attrs:{src:a.logoIcon}})]):t._e()]),e("div",{staticClass:"pay-content"},[e("div",{staticClass:"paymentMethod-name"},[e("p",[t._v(t._s(t.$t("buyPayWay."+a.name)))])]),a.settleTime?e("p",{staticClass:"payArrivalTime"},[t._v(" "+t._s(t._f("onSettleTime")(a.settleTime))+" ")]):t._e(),null!==(r=a.icons)&&void 0!==r&&r.length?e("div",{staticClass:"iconList"},[e("div",{staticClass:"leftIcon"},[t._l(a.icons.slice(0,2),(function(t,a){return e("p",{key:a,staticClass:"iconList-oneOf"},[e("img",{attrs:{src:t,alt:""}})])})),a.icons.length>2?e("p",{staticClass:"otherPayWay-num"},[t._v(" +"+t._s(a.icons.length-2)+" ")]):t._e()],2)]):t._e()])]):t._e()])])})),0):t._e(),t.paymethod_Original.length?t._e():e("content-loader",{attrs:{primaryColor:"#f5f5f5",secondaryColor:"#ffffff",secondaryOpacity:.5,width:343,height:272}},[e("rect",{attrs:{x:"0",y:"0",width:"200",height:"20",rx:"6",ry:"6"}}),e("rect",{attrs:{x:"0",y:"32",width:"100%",height:"72",rx:"6",ry:"6"}}),e("rect",{attrs:{x:"0",y:"116",width:"100%",height:"72",rx:"6",ry:"6"}}),e("rect",{attrs:{x:"0",y:"200",width:"100%",height:"72",rx:"6",ry:"6"}})]),e("div",{staticClass:"unavaible-payment-method"},[t.isUnavaibleTitle?e("div",{staticClass:"unavaible-title"},[t._v(" "+t._s(t.$t("buyPayWay.Unavaible"))+" ")]):t._e(),e("div",{staticClass:"unavaible-list"},t._l(t.paymethod_Original,(function(a,s){var i;return e("div",{key:"binancePay_"+s,staticClass:"unavaible-item"},[e("div",[a.unavaible?t._e():e("div",{staticClass:"payment-other-ways"},[e("div",{staticClass:"logo-icon"},[a.logoIcon_unavaible?e("div",{staticClass:"icon"},[e("img",{attrs:{src:a.logoIcon_unavaible}})]):t._e()]),e("div",{staticClass:"pay-content"},[e("p",{staticClass:"paymentMethod-name"},[t._v(" "+t._s(t.$t("buyPayWay."+a.name))+" ")]),a.settleTime?e("p",{staticClass:"payArrivalTime"},[t._v(" "+t._s(t._f("onSettleTime")(a.settleTime))+" ")]):t._e(),null!==(i=a.icons)&&void 0!==i&&i.length?e("div",{staticClass:"iconList"},[e("div",{staticClass:"leftIcon"},[t._l(a.icons.slice(0,2),(function(t,a){return e("p",{key:a,staticClass:"iconList-oneOf"},[e("img",{attrs:{src:t,alt:""}})])})),a.icons.length>2?e("p",{staticClass:"otherPayWay-num"},[t._v(" +"+t._s(a.icons.length-2)+" ")]):t._e()],2)]):t._e(),e("div",{staticClass:"feeView"},[e("span",[t._v(" "+t._s(t.$t("buyPayWay.limit"))+":"),e("span",{staticClass:"limit-amount"},[t._v(" "+t._s(a.minAmount)+" "+t._s(a.fiat)+" - "+t._s(a.maxAmount)+" "+t._s(a.fiat))])])])])])])])})),0)])],1)])},n=[],d=a("3591"),c=a("2f62"),y=a("7057"),l=a("5c27"),h=a("78f3"),u={name:"allPaymentMethod",props:{paymethodList:{default:null,type:Array},savedCard:{default:null,type:Array},payMethodStatus:{default:!0,type:Boolean}},data(){return{allpaymentMethod:y["b"],selectKey:"",selectVal:"",unavaiblePaymentList:[],isShowPaymentMethodTitle:!0,paymethod_savedCard:{},paymethod_Original:[]}},filters:{onSettleTime(t){return JSON.parse(t)[h["a"].locale||"en-US"]}},watch:{savedCard:{deep:!0,immediate:!0,handler(t,e){if(!t||0===t.length)return this.paymethod_savedCard={},this.selectKey="",this.selectVal="",this.$parent.selectKey="",void(this.$parent.radioIndex="");if(t!==e&&t.length>0){let e=JSON.parse(JSON.stringify(t))[0];const{merchantStatus:a,merchantType:s}=this.merchantInfo,i=a&&"api"===s;if(i)this.paymethod_savedCard=e;else{let t=0,a=0;this.paymethodList.some(e=>{if("10001"===e.payWayCode)return t=Number(e.minAmount),a=Number(e.maxAmount),!0}),Number(this.placeOrderQuery.amount)>=t&&Number(this.placeOrderQuery.amount)<=a&&(this.paymethod_savedCard=e)}}}},paymethod_Original:{deep:!0,immediate:!0,handler(t,e){t&&t.length>0&&t!==e&&"tradeHistory"===this.$route.query.pathHistry&&1===t.length&&["qrCode","virtualAccount","eWallet","Philippines"].includes(t[0].name)&&(this.selectKey="",this.$parent.selectKey="",this.selectVal=t[0],this.$nextTick(()=>{this.$parent.$refs.correspondPaymentMethod.initializationData(t[0])}),this.$parent.editText="edit",this.$parent.payMethodStatus=!1)}},paymethodList:{deep:!0,immediate:!0,handler(){let t=[];if(this.paymethodList.length>0){this.handleUnavaiblePayment(),this.allpaymentMethod.forEach(e=>{let s=[];if(s=["eWallet","Philippines","qrCode"].includes(e.name)?this.paymethodList.filter(t=>e.allpayWayCode.split(",").includes(t.payWayCode))[0]:this.paymethodList.filter(t=>e.payWayCode===t.payWayCode)[0],void 0!==s){let r=Object.assign({},s,e);if(r.rampFee=s.rampFee,r.discountRampFee=s.discountRampFee,r.symbol=s.symbol,"eWallet"!==r.name&&"Philippines"!==r.name&&"qrCode"!==r.name||(r.icons=[],this.paymethodList.forEach(t=>{r.allpayWayCode.includes(t.payWayCode)&&(r.payWayCode=r.payWayCode+t.payWayCode+",",l.some(e=>{if(e.payWayCode==t.payWayCode&&e.icon)return r.icons.push(a("65fd")("./"+e.icon)),!0}))})),["qrCode","Philippines","virtualAccount","eWallet"].includes(r.name)){let t=r.payWayCode.split(",").filter(t=>""!==t&&null!==t&&void 0!==t),e=0,a={};t.forEach(t=>{let s=this.paymethodList.filter(e=>e.payWayCode===t)[0]||[];1===s.isInstant&&(a=s,e+=1)}),e?(r.settleTime=a.settleTime,r.isInstant=1):(r.settleTime="",r.isInstant=0)}if(["501","502","701","702"].includes(r.payWayCode)){if(["501","502"].includes(r.payWayCode))try{window.ApplePaySession&&window.ApplePaySession.canMakePayments()&&t.push(r)}catch(i){console.log(i)}else if("701"===r.payWayCode||"702"===r.payWayCode)try{const e=new window.google.payments.api.PaymentsClient({environment:"PRODUCTION"});e.isReadyToPay({apiVersion:2,apiVersionMinor:0,allowedPaymentMethods:[{type:"CARD",parameters:{allowedAuthMethods:["PAN_ONLY","CRYPTOGRAM_3DS"],allowedCardNetworks:["MASTERCARD","VISA"]}}]}).then((function(e){e.result&&t.push(r)}))}catch(i){console.error(i)}}else t.push(r)}}),t&&t.length>0&&t.forEach(t=>{"Philippines"!==t.name&&"qrCode"!==t.name||!t.payWayCode.split(",").includes("300")||(t.payWayCode=t.payWayCode.split(",").filter(t=>"300"!==t).join(","),t.icons=[t.icons[1]])});try{const e=t[0];e&&(e.icons=Array.from(new Set(e.icons)))}catch(e){console.log(e)}}this.paymethod_Original=t}}},computed:{...Object(c["b"])("cryptoBuyPage",{faitCode:t=>t.fiatCurrencyInfo.fiat}),...Object(c["b"])("buyPayments",{placeOrderQuery:t=>t.placeOrderQuery,orderNo:t=>t.orderNo,payMethodInfo:t=>t.payMethodInfo}),...Object(c["b"])("secondaryBuyPayments",{buyPayment_secondPay:t=>t.buyPayment_secondPay}),...Object(c["b"])("buyCryptoMerchant",{merchantInfo:t=>t.merchantInfo}),isUnavaibleTitle(){const t=this.paymethod_Original.filter(t=>!1===t.unavaible);return!!t.length}},methods:{cardType(t){return this.$options.filters.getCardInfobyCardNumber(t,"cardType")},selectMethods(t,e){if(this.selectKey=t,this.$parent.selectKey=t,this.selectVal=e,this.$store.commit("buyPayments/set_payMethodInfo",e),e.name&&["Philippines","qrCode","eWallet"].includes(e.name)&&1===e.payWayCode.replace(/,$/gi,"").split(",").length)return this.selectKey=this.selectKey?this.selectKey.replace(/,$/gi,""):this.selectKey,this.selectVal.payWayCode=this.selectVal.payWayCode?this.selectVal.payWayCode.replace(/,$/gi,""):this.selectKey,this.$parent.selectKey="",void this.confirm();if(e.name&&["eWallet","Philippines"].includes(e.name))return this.selectKey="",this.$parent.selectKey="",this.$nextTick(()=>{this.$parent.$refs.correspondPaymentMethod.initializationData(e)}),this.$parent.editText="edit",void(this.$parent.payMethodStatus=!1);if("10003"===t)return this.selectKey="",this.$parent.selectKey="",this.$nextTick(()=>{this.$parent.$refs.correspondPaymentMethod.initializationData(e)}),this.$parent.editText="edit",void(this.$parent.payMethodStatus=!1);if("saveCard"===t)return this.$store.commit("buyPayments/set_creditCardInfo",e),this.$store.commit("buyPayments/set_userCardId",e.userCardId),this.$store.commit("buyPayments/set_fullName",Object(r["b"])(Object(r["a"])(e.firstname)+" "+Object(r["a"])(e.lastname))),void this.confirm();if("10001"===t){if(this.$store.commit("buyPayments/set_payMethodInfo",e),this.$route.query.orderNo)return void this.orderMerchantJump(this.payMethodInfo.payWayCode,e);if(0===this.savedCard.length)return this.$parent.request_loading=!1,void(this.$parent.addNewCardShow="2");this.selectKey="",this.$parent.selectKey="",this.$nextTick(()=>{this.$parent.$refs.correspondPaymentMethod.initializationData(e)}),this.$parent.editText="edit",this.$parent.payMethodStatus=!1}},handleUnavaiblePayment(){this.unavaiblePaymentList=[],this.paymethodList.forEach(t=>{t.minAmount&&t.maxAmount&&(Number(this.placeOrderQuery.amount)<Number(t.minAmount)||Number(this.placeOrderQuery.amount)>Number(t.maxAmount)?(t.unavaible=!1,this.unavaiblePaymentList.push(t)):t.unavaible=!0)}),this.isShowPaymentMethodTitle=this.paymethodList.length>this.unavaiblePaymentList.length},async confirm(){if(!["10001","501","502","701","702","20001"].includes(this.payMethodInfo.payWayCode)){let t={payWayCode:this.payMethodInfo.payWayCode},e=await this.$axios.get(this.$api.get_userPayFormData,t).catch(()=>{});if(e){let t=void 0!==e.data&&"{}"!==JSON.stringify(e.data)&&null!==e.data,a={status:t,...e.data};this.$store.commit("buyPayments/set_lastTimePaymentFormInfo",a)}}if("tradeHistory"===this.$route.query.pathHistry){if("saveCard"===this.selectKey||["40001","40002","501","502","701","702"].includes(this.selectVal.payWayCode)){let t=localStorage.getItem("email"),e=JSON.parse(JSON.stringify(this.selectVal));e.cardNumber=Object(r["b"])(e.cardNumber),this.$store.commit("buyPayments/set_creditCardInfo",e),this.$store.commit("buyPayments/set_userCardId",e.userCardId),this.$store.commit("buyPayments/set_fullName",t)}let t={orderNo:this.buyPayment_secondPay.orderNo,payWayCode:this.selectVal.payWayCode};return void this.$axios.post(this.$api.post_updateOrderInfo,t,"").then(async t=>{if(t){const t=JSON.parse(JSON.stringify(this.$route.query));let e="";for(let s in t)e+=s+"="+t[s]+"&";e=e.substring(0,e.length-1);let a={payWayCode:this.payMethodInfo.payWayCode,payWayName:this.payMethodInfo.payWayName};if(this.$store.commit("buyPayments/set_payMethodInfo",a),"601"===this.selectVal.payWayCode)return this.$parent.request_loading=!1,void this.isKycStatus(this.selectVal,e);if("30001"===this.selectVal.payWayCode){this.$parent.request_loading=!1;let{kycIsRequired:t,path:a}=await Object(d["c"])({orderNo:this.buyPayment_secondPay.orderNo,amount:this.buyPayment_secondPay.amount,fiatCurrency:this.buyPayment_secondPay.currency});return void(t?this.$router.push(`${a}?${e}&isTwice=1&type=brazilPay`):this.$router.push(`${a}?${e}&isTwice=1`))}if("saveCard"===this.selectKey&&"10001"===this.selectVal.payWayCode){let t=JSON.parse(JSON.stringify(this.selectVal));return t.cardNumber=Object(r["b"])(t.cardNumber),this.$store.commit("buyPayments/set_creditCardInfo",t),this.$parent.request_loading=!1,void this.isKycStatus(this.selectVal,e)}l.some(t=>{if(t.payWayCode==this.selectVal.payWayCode)return this.isKycStatus(this.selectVal,e),!0})}})}const{orderNo:t}=this.$route.query;t&&["saveCard","20001"].includes(this.selectKey)?this.orderMerchantJump(this.selectKey,this.selectVal):t||await this.placeOrder(this.selectKey,this.selectVal)},async placeOrder(t,e){let a=await Object(d["r"])();if(!0===a&&!1===this.$parent.request_loading){this.$parent.request_loading=!0;let a=this.placeOrderQuery;a.payWayCode=this.payMethodInfo.payWayCode;let s="",i=sessionStorage.getItem("merchantType");this.merchantInfo&&this.merchantInfo.merchantStatus&&"buy"===i&&(s="?"+this.merchantInfo.merchantFullPath,a.merchantParam=this.merchantInfo.merchantFullPath),this.$axios.post(this.$api.post_buy+s,a,"submitToken").then(a=>{if(a&&a.data){if(this.$store.commit("buyPayments/set_orderNo",a.data.orderNo),this.$store.state.buyRouterParams.kyc=a.data.kyc,"10001"===t)return this.$parent.addNewCardShow=2,void(this.$parent.request_loading=!1);let s={payWayCode:this.payMethodInfo.payWayCode,payWayName:this.payMethodInfo.payWayName};if("18000"!==e.payWayCode&&this.$store.commit("buyPayments/set_payMethodInfo",s),"saveCard"===t||["40001","40002","501","502","701","702","30001","18000"].includes(e.payWayCode)||e.payWayCode){let a=localStorage.getItem("email"),s=JSON.parse(JSON.stringify(this.payMethodInfo));s.cardNumber=Object(r["b"])(s.cardNumber),this.$store.commit("buyPayments/set_fullName",a);let i=JSON.parse(JSON.stringify(this.selectVal));return i.cardNumber=Object(r["b"])(i.cardNumber),this.$store.commit("buyPayments/set_creditCardInfo",i),this.$store.commit("buyPayments/set_userCardId",i.userCardId),"saveCard"===t&&this.$store.commit("buyPayments/set_payMethodInfo",this.paymethod_savedCard),void this.isKycStatus(e)}l.some(t=>(t.payWayCode==e.payWayCode&&(this.$parent.request_loading=!1,this.$router.push(""+t.routerPath)),!0))}else this.$parent.request_loading=!1;this.$parent.request_loading=!1}).catch(()=>{this.$parent.request_loading=!1})}else this.$parent.request_loading=!1},async orderMerchantJump(t,e){let a=this;if(this.$store.commit("buyPayments/set_payMethodInfo",e),this.$route.query.orderNo&&"20001"===t)return void this.$router.push("/binancePay?orderNo="+this.$route.query.orderNo);if(this.$route.query.orderNo&&"10001"===t&&0!==this.savedCard.length)return this.selectKey="",this.$parent.selectKey="",this.$store.state.buyRouterParams.payMethod=e,this.$nextTick(()=>{this.$parent.$refs.correspondPaymentMethod.initializationData(e)}),this.$parent.editText="edit",void(this.$parent.payMethodStatus=!1);if(this.$route.query.orderNo&&"10001"===t&&0===this.savedCard.length)return this.selectKey="",this.$parent.selectKey="",this.$parent.addNewCardShow=2,void(this.$parent.addNewCardShow=2);let s=await Object(d["k"])(this.orderNo);"1"===s?this.orderMerchantJump_onfido(a,t):"2"===s&&this.orderMerchantJump_sumsub(a,t)},orderMerchantJump_onfido(t,e){let a={orderAmount:this.placeOrderQuery.amount,fiat:this.placeOrderQuery.fiatCurrency,payType:this.selectVal.payWayCode,businessType:1};this.$axios.post(this.$api.post_check,a,"").then(a=>{if(a&&"0000"===a.returnCode){try{if((1==a.data.kycFlag||2==a.data.kycFlag)&&2==a.data.userLevel)return localStorage.setItem("getKycTokenByOnfidoWay","true"),localStorage.setItem("kyc_info_onfido",JSON.stringify(a.data)),void this.orderMerchantJump_sumsub(t,e,"kyc_onfido");0===a.data.kycFlag&&a.data.currKycLevel>0&&Object(d["e"])(this.payMethodInfo.payWayCode||this.placeOrderQuery.payWayCode,"",1).then(t=>{let e="tradeHistory"===this.$route.query.pathHistry?"?pathHistry=tradeHistory":"";t.IsKycPassed||this.$router.push("/kyc-error-countryCheck"+e)}),localStorage.removeItem("getKycTokenByOnfidoWay")}catch(s){console.log(s)}if(this.$store.commit("buyPayments/set_fullName",Object(r["b"])(Object(r["a"])(this.payMethodInfo.firstname)+" "+Object(r["a"])(this.payMethodInfo.lastname))),1==a.data.kycFlag)return this.$store.state.WhichPage="/creditCardConfig?orderNo="+this.$route.query.orderNo,void this.$router.push("/kycVerify");if(2==a.data.kycFlag)this.$router.push("/kycStatus");else if(0==a.data.kycFlag&&this.$route.query.orderNo&&"saveCard"===e){this.$store.commit("buyPayments/set_orderNo",this.$route.query.orderNo),this.$store.commit("buyPayments/set_userCardId",this.payMethodInfo.userCardId);let t=JSON.parse(JSON.stringify(this.payMethodInfo));t.cardNumber=Object(r["b"])(t.cardNumber),this.$store.commit("buyPayments/set_creditCardInfo",JSON.parse(JSON.stringify(t))),this.$router.push("/creditCardConfig?configPaymentFrom=userPayment&orderNo="+this.$route.query.orderNo)}}})},orderMerchantJump_sumsub(t,e,a){if(this.$store.commit("buyPayments/set_fullName",Object(r["b"])(Object(r["a"])(this.payMethodInfo.firstname)+" "+Object(r["a"])(this.payMethodInfo.lastname))),"kyc_onfido"==a)return t.$store.state.WhichPage="/creditCardConfig?orderNo="+this.$route.query.orderNo,void t.$router.push("/kycVerification");this.$axios.post(this.$api.post_getKycThrough,{orderNo:this.orderNo},"").then(a=>{if(a&&"0000"===a.returnCode){if(!0===a.data.isKyc&&"3"!==a.data.kycLevel)return this.$store.commit("userInfo/set_kycInfo_levelIndex",a.data.kycLevel),"1"==a.data.kycLevel||"1,2"===a.data.kycLevel||"1,2,3"===a.data.kycLevel?this.$store.commit("userInfo/set_kycInfo_kycTips",1):this.$store.commit("userInfo/set_kycInfo_kycTips",2),t.$store.state.WhichPage="/creditCardConfig?orderNo="+this.$route.query.orderNo,void t.$router.push("/kycVerification");if(this.$route.query.orderNo&&"saveCard"===e){this.$store.commit("buyPayments/set_orderNo",this.$route.query.orderNo),this.$store.commit("buyPayments/set_userCardId",this.payMethodInfo.userCardId);let t=JSON.parse(JSON.stringify(this.payMethodInfo));t.cardNumber=Object(r["b"])(t.cardNumber),this.$store.commit("buyPayments/set_creditCardInfo",JSON.parse(JSON.stringify(t))),this.$router.push("/creditCardConfig?configPaymentFrom=userPayment&orderNo="+this.$route.query.orderNo)}a.data.isKyc||Object(d["e"])(this.payMethodInfo.payWayCode||this.placeOrderQuery.payWayCode,"",1).then(t=>{let e="tradeHistory"===this.$route.query.pathHistry?"?pathHistry=tradeHistory":"";t.IsKycPassed||this.$router.push("/kyc-error-countryCheck"+e)})}})},async isKycStatus(t,e){let a,s;const i=t.payWayCode,r=this.orderNo;if(["60001","60002"].includes(i))try{const t=await Object(d["m"])(r,i,1);s=t.isKyc,a=t.kycRule,1==s&&("1"==a?await Object(d["b"])(r):"2"==a&&await Object(d["a"])(r))}catch(o){this.$parent.request_loading=!1,console.log(o)}else a=await Object(d["k"])(r),"1"===a?s=await Object(d["b"])(r,e):"2"===a&&(s=await Object(d["a"])(r,e));[2].includes(s)&&this.isKycStatus_NoNeedKyc(t,e,i,r)},async isKycStatus_NoNeedKyc(t,e,a,s){let i;try{i=await Object(d["e"])(a,s,1);let o="tradeHistory"===this.$route.query.pathHistry?"?pathHistry=tradeHistory":"";if(!i.IsKycPassed)return this.$parent.request_loading=!1,void this.$router.push("/kyc-error-countryCheck"+o);if(e){if("10001"===t.payWayCode){let a=JSON.parse(JSON.stringify(t));return a.cardNumber=Object(r["b"])(a.cardNumber),this.$store.commit("buyPayments/set_creditCardInfo",a),this.$parent.request_loading=!1,void this.$router.push("/creditCardConfig?configPaymentFrom=userPayment&"+e)}l.some(a=>{if(a.payWayCode==t.payWayCode)return this.$parent.request_loading=!1,this.$router.push(`${a.routerPath}?${e}`),!0})}else{if(this.$route.query.orderNo&&"saveCard"===this.selectKey){this.$store.commit("buyPayments/set_orderNo",this.$route.query.orderNo),this.$store.commit("buyPayments/set_userCardId",this.payMethodInfo.userCardId);let t=JSON.parse(JSON.stringify(this.payMethodInfo));return t.cardNumber=Object(r["b"])(t.cardNumber),this.$store.commit("buyPayments/set_creditCardInfo",JSON.parse(JSON.stringify(t))),this.$parent.request_loading=!1,void this.$router.push("/creditCardConfig?configPaymentFrom=userPayment&orderNo="+this.$route.query.orderNo)}"10001"===t.payWayCode?(this.$parent.request_loading=!1,this.$router.push("/creditCardConfig?configPaymentFrom=userPayment")):l.some(t=>{if(t.payWayCode==this.payMethodInfo.payWayCode)return this.$parent.request_loading=!1,this.$router.push(""+t.routerPath),!0})}}catch(o){console.log(o),this.$parent.request_loading=!1}}}},p=u,m=(a("0ddc"),a("2877")),f=Object(m["a"])(p,o,n,!1,null,"de872212",null),C=f.exports,b=function(){var t=this,e=t._self._c;return e("div",{staticClass:"correspondPaymentMethod",class:{allPaymentMethodView:t.payMethodStatus},attrs:{id:"correspondPaymentMethod"}},[e("header",[e("div",{staticClass:"title"},[t._v(t._s(t.$t("buyPayWay."+t.cardTitle)))]),e("div",{staticClass:"edit-icon"},[e("div",{staticClass:"icon",on:{click:t.goback}},[e("img",{attrs:{src:a("b04b"),alt:""}})]),t.savedCard.length>0&&"10001"===t.payMethodInfo.payWayCode?e("div",{staticClass:"edit",on:{click:t.edit}},[t._v(" "+t._s(t.$t("buyPayWay."+t.editText))+" ")]):t._e()])]),"10001"===t.payMethodInfo.payWayCode?e("div",{staticClass:"cardView international-card"},[e("div",{staticClass:"card-list"},t._l(t.savedCard,(function(s,i){return e("div",{key:"savedCard"+i,staticClass:"card-item",class:{"check-true":t.radioIndex===i},on:{click:function(e){return t.selectRadio(s,i)}}},[e("div",{staticClass:"card-icon history-card-icon"},[e("img",{attrs:{src:t._f("getCardInfobyCardNumber")(s.cardNumber,"cardLogo")}})]),e("div",{staticClass:"card-item-info"},[e("div",[e("div",{staticClass:"card-type"},[t._v(" "+t._s(t.cardType(s.cardNumber))+" "),e("span",{directives:[{name:"show",rawName:"v-show",value:"Master"===t.cardType(s.cardNumber),expression:"cardType(item.cardNumber) === 'Master'"}],staticStyle:{"text-transform":"lowercase"}},[t._v(t._s(t.$t("buyPayWay.card")))])]),e("div",{staticClass:"card-num"},[e("span",[t._v("****")]),t._v(t._s(s.cardNumber.substring(s.cardNumber.length-4))+" ")])]),s.settleTime?e("p",{staticClass:"payArrivalTime"},[t._v(" "+t._s(t._f("onSettleTime")(s.settleTime))+" ")]):t._e()]),e("div",{staticClass:"checkView"},[s.deleteStatus?e("div",{staticClass:"deleteIcon",on:{click:function(e){return e.stopPropagation(),t.deleteCard(s,i)}}},[e("img",{attrs:{src:a("2448"),alt:""}})]):e("div",{staticClass:"checkView-false"})])])})),0),t.savedCard.length>=6?e("div",{staticClass:"cardLimit-tips"},[t._v(" "+t._s(t.$t("buyPayWay.cardLimitTips"))+" ")]):t._e(),t.savedCard.length<6?e("div",{staticClass:"cardView-line newCardView",on:{click:t.addCard}},[t._m(0),e("div",{staticClass:"card-type"},[t._v(t._s(t.$t("buyPayWay.useCardTitle")))])]):t._e(),e("div",{staticClass:"fromIcon"},[e("div",{staticClass:"support"},[t._v(t._s(t.$t("buyPayWay.support")))]),e("img",{attrs:{src:a("c921"),alt:""}}),e("img",{attrs:{src:a("6280"),alt:""}})])]):["eWallet","saas","Philippines","promptPay"].includes(t.payMethodInfo.name)?e("div",{staticClass:"cardView idr-cardView"},t._l(t.EWalletList,(function(a,s){return e("div",{key:"EWalletList"+s,staticClass:"idr-cardView-item",on:{click:function(e){return t.selectRadio(a,s)}}},[a.unavaible?e("div",{staticClass:"cardView-line IDRView",class:{"check-true":t.radioIndex===s}},[e("div",{staticClass:"card-icon"},[e("img",{attrs:{src:a.icon}})]),e("div",{staticClass:"card-type"},[e("p",[t._v(t._s(a.payWayName))]),a.settleTime?e("p",{staticClass:"payArrivalTime"},[t._v(" "+t._s(t._f("onSettleTime")(a.settleTime))+" ")]):t._e()])]):t._e()])})),0):t._e(),e("div",{staticClass:"unavaible-payment"},[t.isUnavaibleTitle?e("div",{staticClass:"unavaible-title"},[t._v(" "+t._s(t.$t("buyPayWay.Unavaible"))+" ")]):t._e(),e("div",{staticClass:"unavaible-list"},[["eWallet","Philippines"].includes(t.payMethodInfo.name)?e("div",{staticClass:"cardView"},t._l(t.EWalletList,(function(a,s){return e("div",{key:"EWalletList"+s,staticClass:"unavaible-item"},[a.unavaible?t._e():e("div",{staticClass:"cardView-line IDRView"},[e("div",{staticClass:"card-icon"},[e("img",{attrs:{src:a.icon}})]),e("div",{staticClass:"checkView"},[e("div",{staticClass:"card-type"},[e("p",[t._v(t._s(a.payWayName))]),a.settleTime?e("p",{staticClass:"payArrivalTime"},[t._v(" "+t._s(t._f("onSettleTime")(a.settleTime))+" ")]):t._e()]),e("div",{staticClass:"limit"},[e("span",[t._v(" "+t._s(t.$t("buyPayWay.limit"))+": "),e("span",{staticClass:"limit-amount"},[t._v(" "+t._s(a.minAmount)+" "+t._s(a.fiat)+" - "+t._s(a.maxAmount)+" "+t._s(a.fiat)+" ")])])])])])])})),0):t._e()])]),"10003"===t.payMethodInfo.payWayCode?e("div",{staticClass:"cardView bank-cardView"},t._l(t.paymethodListVA,(function(s,i){return e("div",{key:"bankCardList"+i,staticClass:"cardView-line bankView",class:{"check-true":t.radioIndex===i},on:{click:function(e){return t.selectRadio(s,i)}}},[e("div",{staticClass:"card-icon"},[e("img",{attrs:{src:a("65be")("./"+s.bankLogo)}})]),e("div",{staticClass:"card-type"},[e("div",{staticClass:"card-type-number"},[e("span",{staticClass:"cardType"},[t._v(t._s(s.bankCardName))]),e("span",{staticClass:"fullname"},[t._v(" "+t._s(s.bankCardFullName))])]),s.settleTime?e("p",{staticClass:"payArrivalTime"},[t._v(" "+t._s(t._f("onSettleTime")(s.settleTime))+" ")]):t._e()])])})),0):t._e()])},v=[function(){var t=this,e=t._self._c;return e("div",{staticClass:"card-icon"},[e("img",{attrs:{src:a("0499")}})])}],_=a("cd58"),I={name:"correspondPaymentMethod",props:["allSavedCard","payMethodStatus"],data(){return{radioIndex:"",editText:"edit",cardTitle:"",savedCard:[],EWalletList:[],dataIcon:l,bankCardList:[],isUnavaibleTitle:!1}},filters:{onSettleTime(t){return JSON.parse(t)[h["a"].locale||"en-US"]}},watch:{allSavedCard(){this.savedCard=this.allSavedCard}},computed:{...Object(c["b"])("cryptoBuyPage",{fiat:t=>t.fiatCurrencyInfo.fiat}),...Object(c["b"])("buyPayments",{placeOrderQuery:t=>t.placeOrderQuery,orderNo:t=>t.orderNo,payMethodInfo:t=>t.payMethodInfo}),...Object(c["b"])("secondaryBuyPayments",{buyPayment_secondPay:t=>t.buyPayment_secondPay}),...Object(c["b"])("buyCryptoMerchant",{merchantInfo:t=>t.merchantInfo}),paymethodListVA(){if(this.$parent.paymethodList&&this.$parent.paymethodList.length>0){let t=this.$parent.paymethodList.filter(t=>"10003"===t.payWayCode)[0];if(t){let e=_.filter((e,a)=>(_[a].payWayCode="10003",_[a].payWayName="Virtual Account",_[a].expire=t.expire,_[a].settleTime=t.settleTime,e.allHelpTips.filter(t=>t.openState=!1)));return e}}return[]}},mounted(){},activated(){this.isUnavaibleTitle=!1,this.savedCard=this.allSavedCard,this.EWalletList=l.filter(t=>"eWallet"===t.type)||[]},methods:{initializationData(t){if(this.$store.commit("buyPayments/set_payMethodInfo",t),this.radioIndex="",this.$parent.radioIndex="","10001"===this.payMethodInfo.payWayCode)this.cardTitle="creditCard";else if("10003"===this.payMethodInfo.payWayCode)this.cardTitle="virtualAccount";else{this.cardTitle=t.name;let e=t.allpayWayCode.split(",");this.EWalletList=this.$parent.paymethodList.filter(t=>(this.dataIcon.forEach(e=>{e.payWayCode===t.payWayCode&&e.icon&&(t.icon=a("65fd")("./"+e.icon))}),e.includes(t.payWayCode)))}this.isShowTitle()},isShowTitle(){if("card"!==this.payMethodInfo.name){if(this.EWalletList.length){let t=this.EWalletList.filter(t=>!1===t.unavaible);t.length?this.isUnavaibleTitle=!0:this.isUnavaibleTitle=!1}}else this.isUnavaibleTitle=!1},cardType(t){return this.$options.filters.getCardInfobyCardNumber(t,"cardType")},addCard(){let t={payWayCode:"10001",payWayName:"addCard"};this.$store.commit("buyPayments/set_payMethodInfo",t),this.radioIndex="",this.$parent.radioIndex="",this.$route.query.orderNo&&this.$store.commit("buyPayments/set_orderNo",this.$route.query.orderNo),this.JumpRouter()},async confirm(){if(!["10001","501","502","701","702","20001"].includes(this.payMethodInfo.payWayCode)){let t={payWayCode:this.payMethodInfo.payWayCode},e=await this.$axios.get(this.$api.get_userPayFormData,t).catch(()=>{});if(e){let t=void 0!==e.data&&"{}"!==JSON.stringify(e.data)&&null!==e.data,a={status:t,...e.data};this.$store.commit("buyPayments/set_lastTimePaymentFormInfo",a)}}if(this.$route.query.orderNo)return this.$store.commit("buyPayments/set_orderNo",this.$route.query.orderNo),void this.JumpRouter();if("tradeHistory"===this.$route.query.pathHistry){let t={orderNo:this.buyPayment_secondPay.orderNo,payWayCode:this.payMethodInfo.payWayCode};return void this.$axios.post(this.$api.post_updateOrderInfo,t,"").then(t=>{if(t){let t={pathHistry:"tradeHistory"};this.JumpRouter(t)}})}this.$parent.request_loading=!0;let t=await Object(d["r"])();if(!0===t){let t=this.placeOrderQuery;t.payWayCode=this.payMethodInfo.payWayCode,t.payBankCode=this.payMethodInfo.bankCode;let e="",a=sessionStorage.getItem("merchantType");this.merchantInfo&&this.merchantInfo.merchantStatus&&"buy"===a&&(e="?"+this.merchantInfo.merchantFullPath,t.merchantParam=this.merchantInfo.merchantFullPath),this.$axios.post(this.$api.post_buy+e,t,"submitToken").then(t=>{t&&t.data&&(this.$store.commit("buyPayments/set_orderNo",t.data.orderNo),this.$store.commit("buyPayments/set_creditCardInfo",t.data),this.$store.state.buyRouterParams.kyc=t.data.kyc,this.JumpRouter())}).catch(()=>{this.$parent.request_loading=!1})}else this.$parent.request_loading=!1},async isNeedKyc(t){const e=this.payMethodInfo.payWayCode,a=this.orderNo;let s,i;if(["60001","60002"].includes(e))try{const t=await Object(d["m"])(a,e,1);i=t.isKyc,s=t.kycRule,1==i&&("1"==s?await Object(d["b"])(a):"2"==s&&await Object(d["a"])(a))}catch(r){return void console.log(r)}else s=await Object(d["k"])(a),"1"===s?i=await Object(d["b"])(a):"2"===s&&(i=await Object(d["a"])(a));[2].includes(i)&&this.isKycStatus_NoNeedKyc(t,e,a)},async isKycStatus_NoNeedKyc(t,e,a){let s;try{s=await Object(d["e"])(e,a,1);let i="tradeHistory"===this.$route.query.pathHistry?"?pathHistry=tradeHistory":"";if(!s.IsKycPassed)return this.$parent.request_loading=!1,void this.$router.push("/kyc-error-countryCheck"+i);["10001"].includes(this.payMethodInfo.payWayCode)?(this.$parent.request_loading=!1,this.$router.push("/creditCardConfig?configPaymentFrom=userPayment&orderNo="+this.$route.query.orderNo)):l.some(e=>{if(e.payWayCode==this.payMethodInfo.payWayCode)return this.$parent.request_loading=!1,this.$router.push({path:e.routerPath,query:t}),!0})}catch(i){console.log(i),this.$parent.request_loading=!1}},async JumpRouter(t){let e=localStorage.getItem("email");if(this.$store.commit("buyPayments/set_fullName",e),["40001","40002"].includes(this.payMethodInfo.payWayCode))this.isNeedKyc(t);else{if("addCard"!==this.payMethodInfo.payWayName&&"10001"===this.payMethodInfo.payWayCode||["40001","40002"].includes(this.payMethodInfo.payWayCode)){let e=JSON.parse(JSON.stringify(this.payMethodInfo)),a=localStorage.getItem("email");this.$store.commit("buyPayments/set_fullName",a),e.cardNumber=Object(r["b"])(e.cardNumber),this.$store.commit("buyPayments/set_userCardId",e.userCardId),this.$store.commit("buyPayments/set_creditCardInfo",JSON.parse(JSON.stringify(e))),this.isNeedKyc(t)}if("addCard"===this.payMethodInfo.payWayName&&"10001"===this.payMethodInfo.payWayCode&&this.savedCard.length<=6)return this.$parent.addNewCardShow=2,void(this.$parent.request_loading=!1);if("10003"===this.payMethodInfo.payWayCode||"601"===this.payMethodInfo.payWayCode){"10003"===this.payMethodInfo.payWayCode&&this.$store.commit("buyPayments/set_payMethodInfo",this.payMethodInfo);let e=t||{};return this.$parent.request_loading=!1,this.$route.query.orderNo&&(e.orderNo=this.$route.query.orderNo),void this.isNeedKyc(e)}this.isNeedKyc(t)}},selectRadio(t,e){"edit"===this.editText&&(this.radioIndex=e,this.$parent.radioIndex=e,t.name=this.cardTitle,this.$store.commit("buyPayments/set_payMethodInfo",t))},edit(){if(this.radioIndex="",this.$parent.radioIndex="","edit"===this.editText)return this.editText="cancel",this.savedCard.forEach((t,e)=>{this.savedCard[e].deleteStatus=!0}),void this.$forceUpdate();this.editText="edit",this.savedCard.forEach((t,e)=>{this.savedCard[e].deleteStatus=!1}),this.$forceUpdate()},deleteCard(t,e){this.$axios.post(this.$api.post_deleteForm+t.userCardId,"","").then(t=>{t&&t.data&&(this.savedCard.splice(e,1),this.$forceUpdate(),this.$toast({duration:3e3,message:t.returnMsg}))})},goback(){this.$store.commit("buyPayments/set_payMethodInfo",{}),this.radioIndex="",this.$parent.radioIndex="",this.$parent.payMethodStatus=!0}},deactivated(){this.editText="edit"}},$=I,g=(a("dc19"),Object(m["a"])($,b,v,!1,null,"9f8cb1b8",null)),N=g.exports,P=a("8028"),k=a("ed08"),M={name:"paymentMethod",components:{CorrespondPaymentMethod:N,AllPaymentMethod:C,newCardInfo:P["a"]},data(){return{savedCard:[],paymethodList:[],request_loading:!1,payMethodStatus:!0,selectKey:"",radioIndex:"",addNewCardShow:"1"}},watch:{buttonState:{immediate:!0,handler(){this.$nextTick(()=>{this.$refs.padding_bottom_box.style.paddingBottom=this.$refs.footer_ref.clientHeight+"px"})}}},computed:{...Object(c["b"])("cryptoBuyPage",{fiatCurrencyInfo:t=>t.fiatCurrencyInfo,fiatCurrencyAmount:t=>t.fiatCurrencyAmount,cryptoInfo:t=>t.cryptoInfo,networkInfo:t=>t.networkInfo}),...Object(c["b"])("buyPayments",{payMethodInfo:t=>t.payMethodInfo}),...Object(c["b"])("secondaryBuyPayments",{buyPayment_secondPay:t=>t.buyPayment_secondPay,fiatCurrencyAmount_secondPay:t=>t.fiatCurrencyAmount_secondPay}),...Object(c["b"])("buyCryptoMerchant",{merchantInfo:t=>t.merchantInfo}),disabled(){return!!this.request_loading||""===this.selectKey&&""===this.radioIndex},buttonState(){const{orderNo:t}=this.$route.query,{payWayCode:e}=this.payMethodInfo;return!t||!(!t||!("10001"===e&&0!==this.savedCard.length||["20001","601","300","10003"].includes(e)))}},beforeRouteEnter(t,e,a){a(a=>{"/paymentMethod"===t.path&&["recedivingMode","/tradeHistory","/tradeHistory-BuyDetails","/paymentResult","/errorFormInfo"].includes(e.path)&&(a.selectKey="",a.radioIndex="",a.$refs.allPaymentMethod.selectKey="",a.$refs.allPaymentMethod.selectVal="",a.$refs.correspondPaymentMethod.radioIndex="")})},activated(){if(this.$route.query.orderNo)return Object(d["q"])(),void this.buyOrderInfo();const{fiat:t,alpha2:e}=this.fiatCurrencyInfo;""!==t&&void 0!==t&&null!==t&&""!==e&&void 0!==e&&null!==e?this.InitializationData():this.$router.replace("/")},deactivated(){this.addNewCardShow="1",this.request_loading=!1},methods:{async getUserIpInfo(t){if(!["21003"].includes(t))return!0;try{const t=await Object(d["o"])();return"KR"===String(t).toUpperCase()}catch{return!0}},InitializationData(){this.payMethodStatus=!0,this.savedCard=[],this.paymethodList=[],this.$route.query.orderNo||this.queryPayMethods()},placeOrder(){!0!==this.payMethodStatus?this.$refs.correspondPaymentMethod.confirm():this.$refs.allPaymentMethod.confirm()},goBack(){this.addNewCardShow=1,this.$refs.newCardInfo_ref.clearData(),this.selectKey="",this.$refs.allPaymentMethod.selectKey="",this.$refs.allPaymentMethod.selectVal=""},buyOrderInfo(){this.$axios.get(this.$api.get_orderState+this.$route.query.orderNo,"").then(t=>{if(null!==t&&void 0!==t&&t.data){const{merchantConfig:e,orderState:a,orderNo:s,fiatCurrency:i,fiatCurrencyAmount:o,currencySymbol:n,alpha2:c,cryptoCurrency:y,network:l,discount:h,address:u,cardInfo:p,appId:m,rampFee:f,payWayCode:C,discountRampFee:b}=t.data;if(this.$store.commit("buyCryptoMerchant/set_merchantLogo",(null===e||void 0===e?void 0:e.merchantLogo)||""),this.merchantCustomStyle(e),6===a)return void this.$router.replace("/paymentResult?customParam="+s);this.$parent.$refs.viewTab.tabState=!0;const v=localStorage.getItem("email");this.$store.commit("buyPayments/set_fullName",v),this.$store.commit("buyPayments/set_orderNo",s);const _={fiat:Object(k["k"])(i),fiatSymbol:Object(k["k"])(n),alpha2:Object(k["k"])(c)};this.$store.commit("cryptoBuyPage/set_fiatCurrencyInfo",_);let I={crypto:Object(k["k"])(y)};this.$store.commit("cryptoBuyPage/set_cryptoInfo",I);let $={network:Object(k["k"])(l)};this.$store.commit("cryptoBuyPage/set_networkInfo",$);let g={address:Object(k["k"])(u),amount:Object(k["k"])(o),alpha2:Object(k["k"])(c),fiatCurrency:Object(k["k"])(i),payWayCode:Object(k["k"])(C)};this.$store.commit("buyPayments/set_placeOrderQuery",g),this.$store.commit("cryptoBuyPage/set_fiatCurrencyAmount",o);let N={payWayCode:C,payWayName:""};this.$store.commit("buyPayments/set_payMethodInfo",N);let P=JSON.parse(sessionStorage.getItem("buyMerchantInfo"));P.appId=m,window.sessionStorage.setItem("buyMerchantInfo",JSON.stringify(P));let M=JSON.parse(JSON.stringify(Object(d["p"])()));M.query.appId=m;let O={merchantType:"api",merchantStatus:!0,merchantQueryInfo:M.query,merchantFullPath:M.fullPath};this.$store.commit("buyCryptoMerchant/set_merchantInfo",O),p&&p.length>0&&(this.savedCard=p,this.savedCard.forEach((t,e)=>{this.savedCard[e].payWayCode="10001",this.savedCard[e].cardNumber=Object(r["a"])(t.cardNumber)})),this.paymethodList=[{payWayCode:C,name:"",rampFee:f,discountRampFee:"1"==h?b:f,symbol:n,unavaible:!0}],["10001","501","502","701","702","20001"].includes(this.payMethodInfo.payWayCode)?this.buyOrderPath(t.data):this.requestPayFormInfo(t.data)}}).catch(t=>{console.log("err==>",t),this.$store.commit("buyCryptoMerchant/set_merchantLogo",""),this.merchantCustomStyle()})},async requestPayFormInfo(t){let e={payWayCode:this.payMethodInfo.payWayCode},a=await this.$axios.get(this.$api.get_userPayFormData,e).catch(()=>{});if(a){let t=void 0!==a.data&&"{}"!==JSON.stringify(a.data)&&null!==a.data,e={status:t,...a.data};this.$store.commit("buyPayments/set_lastTimePaymentFormInfo",e)}this.buyOrderPath(t)},merchantCustomStyle(t){let e={menuBarVisible:!0,customerServiceVisible:!0,onOrderCompletionBtnVisible:!0};try{if(t){var a;const{menuBarVisible:i,customerServiceVisible:r,onOrderCompletionBtnVisible:o}=t;var s;if(0===i&&(e.menuBarVisible=!1),0===r&&null!==(a=window)&&void 0!==a&&a.Intercom)e.customerServiceVisible=!1,null===(s=window)||void 0===s||s.Intercom("shutdown");0===o&&(e.onOrderCompletionBtnVisible=!1)}}catch(i){console.log("err==>",i),e={menuBarVisible:!0,customerServiceVisible:!0,onOrderCompletionBtnVisible:!0}}this.$store.commit("set_merchantConfig",e)},async isNeedKyc(t,e){const a=e.payWayCode;let s,i;if(["60001","60002"].includes(a))try{const e=await Object(d["m"])(t,a,1);i=e.isKyc,s=e.kycRule,1==i&&("1"==s?await Object(d["b"])(t):"2"==s&&await Object(d["a"])(t))}catch(r){return void console.log(r)}else s=await Object(d["k"])(t),"1"===s?i=await Object(d["b"])(t):"2"===s&&(i=await Object(d["a"])(t));[2].includes(i)&&this.isKycStatus_NoNeedKyc(e,a,t)},async isKycStatus_NoNeedKyc(t,e,a){let s;try{s=await Object(d["e"])(e,a,1);let i="tradeHistory"===this.$route.query.pathHistry?"?pathHistry=tradeHistory":"";if(s.IsKycPassed){if(["10003","601"].includes(e)){if("10003"===e){let a={payWayCode:e,payWayName:"Virtual Account",bankInfo:_.filter(e=>e.payBankCode===t.bankCode)[0]};return void this.$store.commit("buyPayments/set_payMethodInfo",a)}let a={payWayCode:e,payWayName:"Bank Transfer"};return this.$store.commit("buyPayments/set_payMethodInfo",a),this.$parent.request_loading=!1,void this.$router.push("/otherWays-VA?orderNo="+this.$route.query.orderNo)}l.some(t=>{if(t.payWayCode==e&&"10001"!==e)return this.$parent.request_loading=!1,this.$router.push(`${t.routerPath}?orderNo=${this.$route.query.orderNo}`),!0})}else this.$parent.request_loading=!1,this.$router.push("/kyc-error-countryCheck"+i)}catch(i){console.log(i),this.$parent.request_loading=!1}},async buyOrderPath(t){if(this.$store.state.buyRouterParams.merchantFees_state=!0,sessionStorage.removeItem("indonesiaPayment"),this.$store.state.toastStatus=!1,["10003","601"].includes(t.payWayCode)){if("10003"===t.payWayCode){let e={payWayCode:t.payWayCode,payWayName:"Virtual Account",bankInfo:_.filter(e=>e.payBankCode===t.bankCode)[0]};return void this.$store.commit("buyPayments/set_payMethodInfo",e)}let e={payWayCode:t.payWayCode,payWayName:"Bank Transfer"};return this.$store.commit("buyPayments/set_payMethodInfo",e),void this.isNeedKyc(this.$route.query.orderNo,t)}if("10001"!=t.payWayCode){this.$parent.request_loading=!1;const e=await this.getUserIpInfo(t.payWayCode);if(!e)return void this.$router.replace("/kyc-error-countryCheck");this.isNeedKyc(this.$route.query.orderNo,t)}},queryPayMethods(){var t,e,a,s;let i=this,o={fiat:null===(t=this.fiatCurrencyInfo)||void 0===t?void 0:t.fiat,alpha2:null===(e=this.fiatCurrencyInfo)||void 0===e?void 0:e.alpha2,amount:this.fiatCurrencyAmount,crypto:null===(a=this.cryptoInfo)||void 0===a?void 0:a.crypto,network:null===(s=this.networkInfo)||void 0===s?void 0:s.network};var n,d,c,y,l,h;"tradeHistory"===this.$route.query.pathHistry&&(o={fiat:null===(n=this.buyPayment_secondPay)||void 0===n?void 0:n.currency,alpha2:null===(d=this.buyPayment_secondPay)||void 0===d?void 0:d.alpha2,amount:null===(c=this.buyPayment_secondPay)||void 0===c?void 0:c.amount,orderNo:null===(y=this.buyPayment_secondPay)||void 0===y?void 0:y.orderNo,crypto:null===(l=this.buyPayment_secondPay)||void 0===l?void 0:l.cryptoCurrency,network:null===(h=this.buyPayment_secondPay)||void 0===h?void 0:h.network});this.$axios.get(this.$api.get_payMethods,o).then(t=>{null!==t&&void 0!==t&&t.data&&this.$nextTick(()=>{i.paymethodList=t.data.paymentList,i.savedCard=[];let e=[],a=[];i.paymethodList.forEach(t=>{["10003","10004","10005","10006","201","202","203"].includes(t.payWayCode)&&(e.push(t.rampFee),a.push(t.discountRampFee))});let s=this.$numberHandle(Math.min(...e)),o=this.$numberHandle(Math.min(...a));if(i.paymethodList.forEach((t,e)=>{"10003"===t.payWayCode&&(this.$set(i.paymethodList[e],"rampFee",s),this.$set(i.paymethodList[e],"discountRampFee",o)),this.$set(i.paymethodList[e],"rampFee",Object(k["k"])(t.rampFee)),this.$set(i.paymethodList[e],"discountRampFee",Object(k["k"])(t.discountRampFee)),this.$set(i.paymethodList[e],"settleTime",t.settleTime),this.$set(i.paymethodList[e],"isInstant",t.isInstant),i.paymethodList[e].symbol=Object(k["k"])(t.fiatSymbol)}),t.data.userCardList&&null!==t.data.userCardList&&0!==t.data.userCardList.length&&!i.$route.query.pathHistry){let e=this.paymethodList.filter(t=>"10001"===t.payWayCode)[0]||[];t.data.userCardList.forEach((a,s)=>{t.data.userCardList[s].cardNumber=Object(r["a"])(a.cardNumber),t.data.userCardList[s].payWayCode="10001",t.data.userCardList[s].payWayName="Credit Card",t.data.userCardList[s].settleTime=e.settleTime,i.savedCard.push(a)})}this.merchantPayMethods()})})},merchantPayMethods(){this.$route.query.orderNo&&("10001"!==this.payMethodInfo.payWayCode&&(this.savedCard=[]),this.paymethodList=this.paymethodList.filter(t=>this.payMethodInfo.payWayCode===t.payWayCode))}}},O=M,T=(a("9c70"),Object(m["a"])(O,s,i,!1,null,"1f71322c",null));e["default"]=T.exports},cd58:function(t){t.exports=JSON.parse('[{"bankCardName":"Mandiri","bankCardFullName":"Bank Mandiri","bankCode":"M1","bankLogo":"bankCard1.png","allHelpTips":[{"helpTitle":"ATM MANDIRI","helpInfo":[{"text":"Select the Pay / Buy menu"},{"text":"Select the Multipayment menu"},{"text":"Enter the Bank Mandiricompany code(5 digits before payment code), press Correct"},{"text":"Enter the virtual account number then press Correct"},{"text":"Select Number 1 or according to the bill to be paid then press YES"}]},{"helpTitle":"ONLINE BANKING","helpInfo":[{"text":"Enter User ID & Password."},{"text":"Select the payment menu."},{"text":"Select the Multipayment menu."},{"text":"In the Service Provider Column, select the corresponding service provider(Enter the first 5 digits of the payment code) ."},{"text":"Enter the virtual account number."},{"text":"Select Continue."},{"text":"Web:","children":[{"number":"a.","text":" OTP sent to mobile number."},{"number":"b.","text":" The OTP obtained is inputted inToken to getchallenge code."},{"number":"c.","text":" Chanllenge code input to Mandiri online, then click Continue."}]},{"text":"Apps:","children":[{"number":"a.","text":" After the transaction confirmation appears Select Send."},{"number":"b.","text":" Input MPIN (6 digits)."}]}]}],"check":false},{"bankCardName":"Permata","bankCardFullName":"Bank Permata","bankCode":"BT","bankLogo":"bankCard2.png","allHelpTips":[{"helpTitle":"ATM PERMATA","helpInfo":[{"text":"Select the Other Transaction menu"},{"text":"Select Payment"},{"text":"Choose Other Payments"},{"text":"Select Virtual Account"},{"text":"Enter the virtual account number"},{"text":"A payment confirmation screen will appear"}]},{"helpTitle":"MOBILE INTERNET","helpInfo":[{"text":"Enter User ID & Password"},{"text":"Select Bill Payment"},{"text":"Select a virtual account"},{"text":"Enter the virtual account number"},{"text":"Input nominal payment"},{"text":"If the data matches the transaction / Token authentication input"}]},{"helpTitle":"ATM BERSAMA, ALTO& PRIMA","helpInfo":[{"text":"Select the Transfer menu"},{"text":"Choose Transfer to Other Bank If through ATM Bersama& Alto: Enter Permata Bank code (013) +16 digit pay code If via ATM Prima: Enter the PermataBank code (013) press BENAR, followed by the 16 digit pay code"},{"text":"Input nominal payment"},{"text":"The payment name & nominal payment confirmation screen will appear"}]}],"check":false},{"bankCardName":"CIMB","bankCardFullName":"Commerce International Merchant Bank","bankCode":"B1","bankLogo":"bankCard3.png","allHelpTips":[{"helpTitle":"CIMB ATM","helpInfo":[{"text":"Transfer menu"},{"text":"Select Between CIMB NIAGA Accounts"},{"text":"Input nominal transfer"},{"text":"Input the virtual account number in the destination account"},{"text":"Confirmation and payment process"}]},{"helpTitle":"CIMB CLICKS","helpInfo":[{"text":"Transfer menu"},{"text":"Input nominal transfer"},{"text":"Select Other Account - Bank CIMB Niaga / Rekening Ponsel"},{"text":"The recipient\'s account is filled with a virtual account number"},{"text":"Input MPIN"},{"text":"Confirmation and payment process"}]},{"helpTitle":"GO MOBILE","helpInfo":[{"text":"Transfer menu"},{"text":"Select Transfer to Other CIMB Niaga Account"},{"text":"Input virtual account number and payment nominal"},{"text":"PIN input"},{"text":"Confirmation and payment process"}]},{"helpTitle":"OTHER INTERNET BANKING","helpInfo":[{"text":"Transfer menu"},{"text":"Choose Another Bank Account"},{"text":"Input the virtual account number in the destination account"},{"text":"Input nominal payment"},{"text":"Enter beneficiary bank input with CIMB Niaga"},{"text":"The type of transfer used is online / realtime"},{"text":"Confirmation and payment process"}]},{"helpTitle":"OTHER BANK ATMs","helpInfo":[{"text":"Transfer menu"},{"text":"Choose Another Bank Account"},{"text":"Enter bank code 022"},{"text":"Input the virtual account number in the destination account"},{"text":"Input nominal payment"},{"text":"Confirmation and payment process"}]}],"check":false},{"bankCardName":"BRI","bankCardFullName":"Bank Rakyat Indonesia","bankCode":"BRI","bankLogo":"bankCard5.png","allHelpTips":[{"helpTitle":"BRImo","helpInfo":[{"text":"Login to the BRImo application (enter username and password)"},{"text":"Select the BRIVA menu"},{"text":"Select a source of funds"},{"text":"Input BRIVA code"},{"text":"Confirmation and payment process"}]},{"helpTitle":"BRI INET BANKING","helpInfo":[{"text":"Input card and PIN"},{"text":"Select the menu Other Transactions> Payment> Others> BRIVA"},{"text":"Input the BRIVA code"},{"text":"Confirmation and payment process"}]},{"helpTitle":"ATMBRI","helpInfo":[{"text":"Input card and PIN"},{"text":"Select the menu Other Transactions> Payment> Others> BRIVA"},{"text":"Input the BRIVA code"},{"text":"Confirmation and payment process"}]},{"helpTitle":"ATM BANK LAINNYA","helpInfo":[{"text":"Input card and PIN"},{"text":"Select the menu Other Transactions> Transfer> To Other Bank Accounts"},{"text":"Input bank code 002"},{"text":"Input nominal transfer"},{"text":"Input the BRIVA code"},{"text":"Select the account to be debited"},{"text":"Confirmation and process payments"}]},{"helpTitle":"MOBILE BANKING BRI","helpInfo":[{"text":"Select the Info menu> BRIVA Info"},{"text":"Input BRIVA code"},{"text":"Input password"},{"text":"Confirmation and payment process"}]},{"helpTitle":"BRI BY TELLER","helpInfo":[{"text":"Fill out the form according to BANK BRI regulations"},{"text":"Give forms and money to teller"},{"text":"Receive the receipt as proof of successful payment"}]}],"check":false},{"bankCardName":"Danamon","bankCardFullName":"Bank Danamon","bankCode":"I2","bankLogo":"bankCard4.png","allHelpTips":[],"check":false}]')},dc19:function(t,e,a){"use strict";a("ab6a")},e51a:function(t,e,a){t.exports=a.p+"static/img/bankCard4.6f76c62d.svg"},ebf6:function(t,e,a){}}]);
//# sourceMappingURL=chunk-3135b97b.1702633336083.js.map